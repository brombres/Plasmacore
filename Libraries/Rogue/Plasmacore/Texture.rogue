module Plasmacore

class Texture
  PROPERTIES
    id           : Int32
    filename     : String
    texture_size : XY

  METHODS
    method init( filename )
      TextureManager.textures_pending_load.add( this )

    method is_ready->Logical
      return id?

    method on_load( m:Message )
      if (m.read_logical)
        id = m.read_int32x
        local w = m.read_int32x
        local h = m.read_int32x
        texture_size = XY(w,h)
@trace id, texture_size
      else
        println "Error loading $"(filename)
      endIf
endClass

class TextureManager [singleton]
  PROPERTIES
    textures_pending_load = Texture[]

  METHODS
    method load_pending
      if (textures_pending_load.count)
        forEach (texture in textures_pending_load)
          local m = Message( "Texture.load" )
          m.write_string( texture.filename )
          m.send_rsvp( texture=>on_load )
        endForEach
        textures_pending_load.clear
      endIf
endClass

