module Plasmacore

class VKSwapChain
  PROPERTIES
    current_frame : VKFramePresenter
    frames        = VKFramePresenter[]

  METHODS
    method init( buffer_count=3:Int32, max_lag=2:Int32 )
      max_lag .= clamped_low( 1 )
      loop (max_lag) frames.add( VKFramePresenter() )
      current_frame = frames.first

    method advance_frame
      current_frame = frames[ (frames.locate(current_frame).value + 1) % frames.count ]

    method block_until_ready
      current_frame.block_until_ready

endClass

class VKFramePresenter
  PROPERTIES
    native "VkFence fence;"
    native "VkSemaphore image_acquired_semaphore;"
    native "VkSemaphore draw_complete_semaphore;"
    native "VkSemaphore image_ownership_semaphore;"

  METHODS
    method init
      local renderer = Display.renderer->(as VulkanRenderer)
      local device = renderer.device

      native
        @|VkFenceCreateInfo fence_config =
         |{
         |  .sType = VK_STRUCTURE_TYPE_FENCE_CREATE_INFO,
         |  .pNext = NULL,
         |  .flags = VK_FENCE_CREATE_SIGNALED_BIT
         |};
         |
         |VkSemaphoreCreateInfo sephamore_config =
         |{
         |  .sType = VK_STRUCTURE_TYPE_SEMAPHORE_CREATE_INFO,
         |  .pNext = NULL,
         |  .flags = 0
         |};
         |
         |VkDevice device = $device->value;
         |
         |vkCreateFence( device, &fence_config, NULL, &$this->fence );
         |
         |vkCreateSemaphore( device, &sephamore_config, NULL, &$this->image_acquired_semaphore );
         |vkCreateSemaphore( device, &sephamore_config, NULL, &$this->draw_complete_semaphore );
         |if ($renderer->uses_separate_presentation_queue)
         |{
         |  vkCreateSemaphore( device, &sephamore_config, NULL, &$this->image_ownership_semaphore );
         |}

    method block_until_ready
      local renderer = Display.renderer->(as VulkanRenderer)
      local device = renderer.device
      native
        @|vkWaitForFences( $device->value, 1, &$this->fence, VK_TRUE, UINT64_MAX );
         |vkResetFences( $device->value, 1, &$this->fence );
endClass
