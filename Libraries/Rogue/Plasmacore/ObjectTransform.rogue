module Plasmacore

class ObjectTransform
  # push
  #   [default] - Multiplies existing transform by new value
  #   &replace  - Replaces existing transform by new value
  # pop
  #   Restores previous transform.
  GLOBAL METHODS
    method pop( count=1:Int32 )
      Canvas.render_queue.write( RenderCmd.POP_OBJECT_TRANSFORM )
      Canvas.render_queue.write_int32x( count )

    method push( m:Matrix, &replace )
      local q = Canvas.render_queue
      q.write( RenderCmd.PUSH_OBJECT_TRANSFORM )
      q.write( m )
      q.write_logical( replace )

    method push_rotate( theta:Radians, axis:XYZ, &replace )
      local q = Canvas.render_queue
      q.write( RenderCmd.PUSH_ROTATE_OBJECT )
      q.write_real32( theta.value )
      q.write_real32( axis.x )
      q.write_real32( axis.y )
      q.write_real32( axis.z )
      q.write_logical( replace )

    method push_scale( scale:XYZ, &replace )
      local q = Canvas.render_queue
      q.write( RenderCmd.PUSH_SCALE_OBJECT )
      q.write_real32( scale.x )
      q.write_real32( scale.y )
      q.write_real32( scale.z )
      q.write_logical( replace )

    method push_translate( delta:XYZ, &replace )
      local q = Canvas.render_queue
      q.write( RenderCmd.PUSH_TRANSLATE_OBJECT )
      q.write_real32( delta.x )
      q.write_real32( delta.y )
      q.write_real32( delta.z )
      q.write_logical( replace )
endClass

