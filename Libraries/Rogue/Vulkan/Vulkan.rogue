module Vulkan

$macro NATIVE_PROCEDURE<<$procedure_name>>
  $procedure_name : VKNativeProcedure<<$procedure_name>>
$endMacro

$macro SET_NATIVE_PROCEDURE<<$var_context,$source_context,$procedure_name>>
  $var_context.$procedure_name = VKNativeProcedure<<$procedure_name>>( $source_context.procedure_address($string($procedure_name)) )
$endMacro

$include Vulkan/VKApplicationInfo
$include Vulkan/VKFormat
$include Vulkan/VKColorSpace
$include Vulkan/VKCommandBuffer
$include Vulkan/VKCommandPool
$include Vulkan/VKCompositeAlphaType
$include Vulkan/VKContext
$include Vulkan/VKDevice
$include Vulkan/VKDeviceConfig
$include Vulkan/VKDeviceType
$include Vulkan/VKImage
$include Vulkan/VKImageAspect
$include Vulkan/VKImageUsage
$include Vulkan/VKInstance
$include Vulkan/VKInstanceConfig
$include Vulkan/VKGPU
$include Vulkan/VKPresentMode
$include Vulkan/VKQueueFamily
$include Vulkan/VKSurface
$include Vulkan/VKSurfaceFormat
$include Vulkan/VKSurfaceTransform
$include Vulkan/VKSwapchain
$include Vulkan/VKSwapchainImage
$include Vulkan/VKTextureImage

#$include Vulkan/VKRenderBuffer

nativeHeader
  @|#define VK_USE_PLATFORM_METAL_EXT 1
   |#include <vulkan/vulkan.h>

nativeType<<"VkBuffer">>           VKNativeBuffer
nativeType<<"VkCommandBuffer">>    VKNativeCommandBuffer
nativeType<<"VkCommandPool">>      VKNativeCommandPool
nativeType<<"VkDescriptorSet">>    VKNativeDescriptorSet
nativeType<<"VkDevice">>           VKNativeDevice
nativeType<<"VkDeviceMemory">>     VKNativeDeviceMemory
nativeType<<"VkFramebuffer">>      VKNativeFramebuffer
nativeType<<"VkPhysicalDevice">>   VKNativeGPU
nativeType<<"VkImage">>            VKNativeImage
nativeType<<"VkImageLayout">>      VKNativeImageLayout
nativeType<<"VkImageView">>        VKNativeImageView
nativeType<<"VkInstance">>         VKNativeInstance
nativeType<<"VkSampler">>          VKNativeSampler
nativeType<<"VkSurfaceKHR">>       VKNativeSurface
nativeType<<"VkSurfaceFormatKHR">> VKNativeSurfaceFormat

class VKNativeProcedure<<$NativeType>> [compound]
  PROPERTIES
    native "PFN_$NativeType value;"

  GLOBAL METHODS
    method create( pointer:RogueVoidPointer )->VKNativeProcedure<<$NativeType>>
      local result : VKNativeProcedure<<$NativeType>>
      native @|$result.value = $pointer.value;
      return result
endClass

