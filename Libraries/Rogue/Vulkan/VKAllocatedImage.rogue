module Vulkan

class VKAllocatedImage : VKImage
  PROPERTIES
    format        : VKFormat
    native_memory : VKNativeDeviceMemory

  METHODS
    method init( context, size, format, usage:VKImageUsage, aspect_mask:VKImageAspect )
      local image_memory_size : Int32
      local type_bits : Int32

      native
        @|VkDevice device = $context->device->native_device.value;
         |
         |{
         |  VkImageCreateInfo image_config =
         |  {
         |    .sType = VK_STRUCTURE_TYPE_IMAGE_CREATE_INFO,
         |    .pNext = NULL,
         |    .imageType = VK_IMAGE_TYPE_2D,
         |    .format = (VkFormat) $format.value,
         |    .extent = { $size.x,  $size.y, 1 },
         |    .mipLevels = 1,
         |    .arrayLayers = 1,
         |    .samples = VK_SAMPLE_COUNT_1_BIT,
         |    .tiling = VK_IMAGE_TILING_OPTIMAL,
         |    .usage = (VkImageUsageFlags) $usage.value,
         |    .flags = 0
         |  };
         |
         |  vkCreateImage( device, &image_config, NULL, &$native_image.value );
         |}
         |
         |{
         |  VkImageViewCreateInfo view_config =
         |  {
         |    .sType = VK_STRUCTURE_TYPE_IMAGE_VIEW_CREATE_INFO,
         |    .pNext = NULL,
         |    .image = $native_image.value,
         |    .format = (VkFormat) $format.value,
         |    .subresourceRange =
         |    {
         |      .aspectMask     = $aspect_mask.value,
         |      .baseMipLevel   = 0,
         |      .levelCount     = 1,
         |      .baseArrayLayer = 0,
         |      .layerCount     = 1
         |    },
         |    .components =
         |    {
         |      VK_COMPONENT_SWIZZLE_IDENTITY,
         |      VK_COMPONENT_SWIZZLE_IDENTITY,
         |      VK_COMPONENT_SWIZZLE_IDENTITY,
         |      VK_COMPONENT_SWIZZLE_IDENTITY
         |    },
         |    .flags    = 0,
         |    .viewType = VK_IMAGE_VIEW_TYPE_2D
         |  };
         |
         |  vkCreateImageView( device, &view_config, NULL, &$native_view.value );
         |  $this->is_view_created = 1;
         |}
         |
         |{
         |  VkMemoryRequirements mem_reqs;
         |  vkGetImageMemoryRequirements( device, $native_image.value, &mem_reqs );
         |  $image_memory_size = (RogueInt32) mem_reqs.size;
         |  $type_bits = mem_reqs.memoryTypeBits;
         |}

         native_memory = context.device.allocate_memory( image_memory_size, type_bits )

      native
      @|vkBindImageMemory( device, $native_image.value, $native_memory.value, 0 );

    method on_cleanup [override]
      native @|VkDevice device = $context->device->native_device.value;

      if (native_image)
        native @|vkDestroyImage( device, $native_image.value, NULL );
                |$native_image.value = NULL;
      endIf

      if (native_memory)
        native @|vkFreeMemory( device, $native_memory.value, NULL );
                |$native_memory.value = NULL;
      endIf

      prior.on_cleanup

endClass
