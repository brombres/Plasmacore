module Vulkan

class VKSwapchainImage : VKImage
  PROPERTIES
    cmd                     : VKCommandBuffer
    cmd_graphics_to_present : VKNativeCommandBuffer
    uniform_buffer          : VKBuffer
    #uniform_buffer          : VKNativeBuffer
    #uniform_memory          : VKNativeDeviceMemory
    uniform_memory_ptr      : RogueVoidPointer
    native_framebuffer      : VKNativeFramebuffer
    descriptor_set          : VKNativeDescriptorSet

  METHODS
    method init( context, native_image, size )
      cmd = context.swapchain.cmd_buffer_pool.create_command_buffer

    method on_cleanup [override]
      if (cmd)
        cmd.destroy
        cmd = null
      endIf

      native @|VkDevice device = $context->device->native_device.value;

      if (native_framebuffer)
        native @|vkDestroyFramebuffer( device, $native_framebuffer.value, NULL );
                |$native_framebuffer.value = 0;
      endIf

      if (uniform_buffer)
        uniform_buffer.destroy
        uniform_buffer = null
      endIf

      #if (uniform_buffer)
      #  native @|vkDestroyBuffer( device, $uniform_buffer.value, NULL );
      #          |$uniform_buffer.value = NULL;
      #endIf

      #if (uniform_memory)
      #  native @|vkUnmapMemory( device, $uniform_memory.value );
      #          |vkFreeMemory( device, $uniform_memory.value, NULL );
      #          |$uniform_memory.value = NULL;
      #endIf

      prior.on_cleanup

    method configure_uniform_buffer( size:Int32 ) [api]
      uniform_buffer = context.device.create_buffer( size, VKBufferUsage.UNIFORM_BUFFER )
      uniform_memory_ptr = uniform_buffer.map

endClass
